name: plural

services:
    server:
        build:
            context: .
            dockerfile: backend/Dockerfile
            args:
                NODE_ENV: ${NODE_ENV:-local}
        ports:
            - '${WSS_PORT}:${WSS_PORT}'
            - '${PORT}:${PORT}'
        env_file:
            - .env
        environment:
            HOST: 0.0.0.0
            PORT: ${PORT}
            REDIS_HOST: redis
            REDIS_PORT: ${REDIS_PORT}
            WSS_PORT: ${WSS_PORT}
            DATABASE_HOST: postgres
            DATABASE_PORT: ${DATABASE_PORT}
            DATABASE_USER: ${DATABASE_USER}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            DATABASE_NAME: ${DATABASE_NAME}
            ELASTICSEARCH_NODE: http://es01:9201
            NODE_ENV: local
        depends_on:
            es01:
                condition: service_started
            redis:
                condition: service_healthy
        networks:
            server-network:
                aliases:
                    - server
            elastic:

        volumes:
            - ./uploads:/usr/src/app/uploads
            - ./.yarn:/usr/src/app/.yarn:rw

    redis:
        image: redis
        command: ["redis-server", "--port", "${REDIS_PORT}"]
        env_file:
            - .env
        environment:
            DEBUG: ioredis:*
        ports:
            - '${REDIS_PORT}:${REDIS_PORT}'
        healthcheck:
            test: ["CMD", "redis-cli", "-p", "${REDIS_PORT}", "ping"]
            interval: 10s
            timeout: 5s
            retries: 10
        networks:
            - server-network

    nginx:
        build:
            context: .
            dockerfile: ./nginx/Dockerfile
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/conf.d/app.local.conf:/etc/nginx/conf.d/app.conf
            - ./certs:/etc/nginx/certs
        networks:
            server-network:
                aliases:
                    - nginx
        depends_on:
            - server

    es01:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        environment:
            - node.name=es01
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es02,es03
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data01:/usr/share/elasticsearch/data
        ports:
            - 9201:9201
            - 9301:9301
        networks:
            - elastic
    es02:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        environment:
            - node.name=es02
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es03
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data02:/usr/share/elasticsearch/data
        networks:
            - elastic
    es03:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        environment:
            - node.name=es03
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es02
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - xpack.security.enabled=false
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data03:/usr/share/elasticsearch/data
        networks:
            - elastic

networks:
    server-network:
        name: plural_server-network
        driver: bridge
    elastic:
        driver: bridge
volumes:
    data01:
        driver: local
    data02:
        driver: local
    data03:
        driver: local
